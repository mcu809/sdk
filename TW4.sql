CREATE TABLE STUDENT4
(
    USN VARCHAR(20) ,
    SNAME VARCHAR(20),
    ADDRESS VARCHAR(20),
    PHONE INT,
    GENDER VARCHAR(1),
    PRIMARY KEY(USN)
);

INSERT INTO STUDENT4
VALUES('1BI15CS101', 'ABBY', 'NYC', 7891231111, 'M');
INSERT INTO STUDENT4
VALUES('1BI15CS102', 'BETTY', 'TX', 7891232222, 'F');
INSERT INTO STUDENT4
VALUES('1BI15CS103', 'RYAN', 'NY', 7891233333, 'M');
INSERT INTO STUDENT4
VALUES('1BI15CS104', 'MIKE', 'NY', 7891234444, 'M');
INSERT INTO STUDENT4
VALUES('1BI15CS105', 'ALYSON', 'NY', 7891235555, 'F');

CREATE TABLE SEMSEC4
(
    SSID INT,
    SEM INT,
    SEC VARCHAR(1),
    PRIMARY KEY(SSID)
);

INSERT INTO SEMSEC4
VALUES(1, 5, 'A');
INSERT INTO SEMSEC4
VALUES(2, 5, 'B');
INSERT INTO SEMSEC4
VALUES(3, 5, 'A');
INSERT INTO SEMSEC4
VALUES(4, 4, 'C');
INSERT INTO SEMSEC4
VALUES(5, 4, 'C');

DELETE FROM SEMSEC4 WHERE SEM = 4;

truncate table IAMARKS4;

DROP TABLE SEMSEC4;

CREATE TABLE CLASS4
(
    USN VARCHAR(20),
    SSID INT,
    PRIMARY KEY(USN),
    FOREIGN KEY(USN) REFERENCES STUDENT4 (USN),
    FOREIGN KEY(SSID) REFERENCES SEMSEC4 (SSID)
);

INSERT INTO CLASS4
VALUES('1BI15CS101', 1);
INSERT INTO CLASS4
VALUES('1BI15CS102', 2);
INSERT INTO CLASS4
VALUES('1BI15CS103', 3);
INSERT INTO CLASS4
VALUES('1BI15CS104', 4);
INSERT INTO CLASS4
VALUES('1BI15CS105', 5);

CREATE TABLE SUBJECT4
(
    SUBCODE VARCHAR(6),
    TITLE VARCHAR(5) ,
    SEM INT,
    CREDITS INT,
    PRIMARY KEY(SUBCODE)
);
INSERT INTO SUBJECT4
VALUES('18CS51', 'ME', 5, 10);
INSERT INTO SUBJECT4
VALUES('18CS52', 'CNS', 5, 10);
INSERT INTO SUBJECT4
VALUES('18CS53', 'DBMS', 5, 10);
INSERT INTO SUBJECT4
VALUES('18CS41', 'DAA', 4, 10);
INSERT INTO SUBJECT4
VALUES('18CS42', 'OCC', 4, 10);

CREATE TABLE IAMARKS4
(
    USN VARCHAR(20),
    SUBCODE VARCHAR(6),
    SSID INT,
    TEST1 INT ,
    TEST2 INT,
    TEST3 INT,
    FINALIA INT,
    PRIMARY KEY(USN, SUBCODE),
    FOREIGN KEY(USN) REFERENCES STUDENT4(USN),
    FOREIGN KEY(SUBCODE) REFERENCES  SUBJECT4(SUBCODE),
    FOREIGN KEY(SSID) REFERENCES SEMSEC4(SSID)
);
INSERT INTO IAMARKS4
VALUES('1BI15CS101', '18CS51', 1, 10, 9, 8, NULL);
INSERT INTO IAMARKS4
VALUES('1BI15CS102', '18CS52', 2, 12, 11, 10, NULL);
INSERT INTO IAMARKS4
VALUES('1BI15CS103', '18CS53', 3, 15, 15, 15, NULL);
INSERT INTO IAMARKS4
VALUES('1BI15CS104', '18CS41', 4, 19, 19, 19, NULL);
INSERT INTO IAMARKS4
VALUES('1BI15CS105', '18CS42', 5, 5, 5, 4, NULL);

truncate table IAMARKS4;

SELECT *
FROM STUDENT4;
SELECT *
FROM SEMSEC4;
SELECT *
FROM CLASS4;
SELECT *
FROM SUBJECT4;
SELECT *
FROM IAMARKS4;

-- QUERY 1
SELECT S.SNAME, S.USN
FROM STUDENT4 S, CLASS4 C, SEMSEC4 SS
WHERE  S.USN=C.USN
    AND C.SSID = SS.SSID
    AND SEM = 4 AND SEC ='C';

-- QUERY 2
SELECT SS.SEM, SS.SEC, GENDER, COUNT(*)
FROM STUDENT4 S, CLASS4 C, SEMSEC4 SS
WHERE S.USN =C.USN AND SS.SSID=C.SSID
GROUP BY SS.SEM, SS.SEC, GENDER;

--QUERY 3
CREATE VIEW TEST1_VIEW
AS
    SELECT TEST1
    FROM IAMARKS4
    WHERE USN = '1BI15CS101';

SELECT * FROM TEST1_VIEW;
--QUERY 4
CREATE OR REPLACE PROCEDURE AVGMARKS 
IS 
CURSOR C_IAMARKS IS
SELECT GREATEST(TEST1,TEST2) AS A, GREATEST(TEST1,TEST3) AS B, GREATEST(TEST3,TEST2) AS C
FROM IAMARKS4
WHERE FINALIA IS NULL
FOR
UPDATE;
C_A INT; 
C_B INT; 
C_C INT; 
C_SM INT; 
C_AV INT;
BEGIN
    OPEN C_IAMARKS;
    LOOP
    FETCH C_IAMARKS
    INTO C_A, C_B, C_C;
EXIT WHEN C_IAMARKS%NOTFOUND;
IF (C_A != C_B) 
THEN
C_SM:
=C_A+C_B; 
ELSE
C_SM:
=C_A+C_C;
END
IF; 
C_AV:
=C_SM/2;
UPDATE IAMARKS4 SET FINALIA=C_AV WHERE CURRENT OF C_IAMARKS;
END LOOP;
CLOSE C_IAMARKS;
END; 
/


BEGIN
AVGMARKS;
END;
/

--QUERY 5

    SELECT S.USN, SNAME , 'OUTSTANDING'
    FROM STUDENT4 S, SEMSEC4 SS, IAMARKS4 IA
    WHERE S.USN=IA.USN AND SS.SSID=IA.SSID AND SS.SEM=4 AND
        FINALIA BETWEEN 19 AND 30
UNION
    SELECT S.USN, SNAME , 'AVG'
    FROM STUDENT4 S, SEMSEC4 SS, IAMARKS4 IA
    WHERE S.USN=IA.USN AND SS.SSID=IA.SSID AND
        FINALIA BETWEEN 12 AND 16
UNION
    SELECT S.USN, SNAME , 'WEAK'
    FROM STUDENT4 S, SEMSEC4 SS, IAMARKS4 IA
    WHERE S.USN=IA.USN AND SS.SSID=IA.SSID AND
        FINALIA <12;
----------------------------------------------------------
CREATE OR REPLACE PROCEDURE AVGMARKS 
IS 
CURSOR C_IAMARKS IS 
SELECT GREATEST(TEST1,TEST2) AS A, GREATEST(TEST1,TEST3) AS B, 
		GREATEST(TEST3,TEST2) AS C 
FROM IAMARKS4 
WHERE FINALIA IS NULL 
FOR UPDATE; 
C_A INT; 
C_B INT; 
C_C INT; 
C_SM INT; 
C_AV INT; 
BEGIN 
OPEN C_IAMARKS; 
LOOP 
FETCH C_IAMARKS INTO C_A, C_B, C_C; 
EXIT WHEN C_IAMARKS%NOTFOUND; 
IF (C_A != C_B) THEN 
C_SM:=C_A+C_B; 
ELSE 
C_SM:=C_A+C_C; 
END IF; 
C_AV:=C_SM/2; 
UPDATE IAMARKS4 SET FINALIA=C_AV WHERE CURRENT OF C_IAMARKS; 
END LOOP; 
CLOSE C_IAMARKS; 
END; 
/

To execute
Begin
AVGMARKS 
End;
/
----------------------------------------------------------------
CREATE OR REPLACE PROCEDURE AVGMARKS2 
IS 
CURSOR C_IAMARKS IS 
SELECT GREATEST(TEST1,TEST2) AS A, GREATEST(TEST1,TEST3) AS B, GREATEST(TEST3,TEST2) AS C 
FROM IAMARKS4 
WHERE FINALIA IS NULL 
FOR UPDATE; 
C_A INT; 
C_B INT; 
C_C INT; 
C_SM INT; 
C_AV INT; 
BEGIN 
OPEN C_IAMARKS; 
LOOP 
FETCH C_IAMARKS INTO C_A, C_B, C_C; 
EXIT WHEN C_IAMARKS%NOTFOUND; 
IF (C_A != C_B) THEN 
C_SM:=C_A+C_B; 
ELSE 
C_SM:=C_A+C_C; 
END IF; 
C_AV:=C_SM/2; 
UPDATE IAMARKS4 SET FINALIA=C_AV WHERE CURRENT OF C_IAMARKS; 
END LOOP; 
CLOSE C_IAMARKS; 
END; 
/

To execute
Begin
Avgmarks;
EnD;
/